---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/api/v1/consent/{id}":
    put:
      tags:
        - consent-controller
      operationId: updateCandidate
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConsentDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ConsentDto"
  "/api/v1/candidates/{id}":
    get:
      tags:
        - candidate-controller
      operationId: getCandidate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CandidateDto"
    put:
      tags:
        - candidate-controller
      operationId: updateCandidate_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CandidateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CandidateDto"
    delete:
      tags:
        - candidate-controller
      operationId: deleteCandidate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  "/api/v1/callback/payment/payment":
    put:
      tags:
        - payment-callback-rest-controller
      operationId: beneficiaryPaymentCB
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  "/api/v1/callback/payment/beneficiary-update":
    put:
      tags:
        - payment-callback-rest-controller
      operationId: beneficiaryUpdateOnboardingCB
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  "/api/v1/callback/payment/beneficiary-register":
    put:
      tags:
        - payment-callback-rest-controller
      operationId: beneficiaryRegisterOnboardingCB
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  "/api/v1/payment/order-payment":
    post:
      tags:
        - payment-rest-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/BeneficiaryDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                type: string
  "/api/v1/candidates":
    get:
      tags:
        - candidate-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CandidateDto"
    post:
      tags:
        - candidate-controller
      operationId: createCandidate
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCandidateDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CandidateDto"
  "/api/v1/beneficiaries":
    get:
      tags:
        - beneficiary-controller
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BeneficiaryDto"
    post:
      tags:
        - beneficiary-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateBeneficiaryDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/BeneficiaryDto"
  "/api/v1/roles":
    get:
      tags:
        - auth-controller
      operationId: getRoles
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RolesDto"
  "/api/v1/payment/payment-orders":
    get:
      tags:
        - payment-rest-controller
      operationId: getPaymentOrders
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PaymentDisbursementDto"
  "/api/v1/payment/health":
    get:
      tags:
        - payment-rest-controller
      operationId: getHealth
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/v1/packages":
    get:
      tags:
        - package-controller
      operationId: findById
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PackageDto"
  "/api/v1/packages/{id}":
    get:
      tags:
        - package-controller
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PackageDto"
  "/api/v1/beneficiaries/{id}":
    get:
      tags:
        - beneficiary-controller
      operationId: getBeneficiary
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/BeneficiaryDto"
  "/api/authmode":
    get:
      tags:
        - auth-mode-controller
      operationId: authMode
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/v1/callback/callback":
    get:
      tags:
        - callback-controller
      operationId: callback
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    put:
      tags:
        - callback-controller
      operationId: callback_3
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    post:
      tags:
        - callback-controller
      operationId: callback_2
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    delete:
      tags:
        - callback-controller
      operationId: callback_5
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    options:
      tags:
        - callback-controller
      operationId: callback_6
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    head:
      tags:
        - callback-controller
      operationId: callback_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
    patch:
      tags:
        - callback-controller
      operationId: callback_4
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RequestDataDto"
components:
  schemas:
    ConsentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        candidateId:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - GRANTED
            - NOT_GRANTED
        date:
          type: string
          format: date-time
    CandidateDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        person:
          "$ref": "#/components/schemas/PersonDto"
        packages:
          type: array
          items:
            "$ref": "#/components/schemas/PackageDto"
        consent:
          "$ref": "#/components/schemas/ConsentDto"
    PackageDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        amount:
          type: number
          format: float
        currency:
          type: string
    PersonDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        personalIdCode:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
        region:
          type: string
        homeAddress:
          type: string
        phoneNumber:
          type: string
        occupation:
          type: string
        municipality:
          type: string
        zipCode:
          type: string
        bankAccountOwnerName:
          type: string
        financialAddress:
          type: string
        financialModality:
          type: string
        iban:
          type: string
        bankName:
          type: string
    BeneficiaryDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        person:
          "$ref": "#/components/schemas/PersonDto"
        paymentStatus:
          type: string
          enum:
            - INITIATE
            - ACCEPTED
        enrolledPackage:
          "$ref": "#/components/schemas/PackageDto"
    CreateCandidateDto:
      type: object
      properties:
        person:
          "$ref": "#/components/schemas/CreatePersonDto"
        packageIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
    CreatePersonDto:
      type: object
      properties:
        personalIdCode:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
        region:
          type: string
        homeAddress:
          type: string
        phoneNumber:
          type: string
        occupation:
          type: string
        municipality:
          type: string
        zipCode:
          type: string
        bankAccountOwnerName:
          type: string
        financialAddress:
          type: string
        financialModality:
          type: string
        iban:
          type: string
        bankName:
          type: string
    CreateBeneficiaryDto:
      type: object
      properties:
        candidateDto:
          "$ref": "#/components/schemas/CandidateDto"
        enrolledPackage:
          "$ref": "#/components/schemas/PackageDto"
    RolesDto:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            type: string
    JsonNode:
      type: object
    PaymentDisbursementDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mode:
          type: string
        requestUUID:
          type: string
        request:
          "$ref": "#/components/schemas/JsonNode"
        response:
          "$ref": "#/components/schemas/JsonNode"
        callback:
          "$ref": "#/components/schemas/JsonNode"
    RequestDataDto:
      type: object
      properties:
        method:
          type: string
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        parameters:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        body:
          type: string
